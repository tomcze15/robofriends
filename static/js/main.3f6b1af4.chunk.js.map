{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","robot","index","SearchBox","handleSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","setRobots","searchfield","setSearchfield","count","setCount","useEffect","fetch","then","res","json","console","log","filteredRobots","filter","toLowerCase","includes","length","onClick","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACvB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,8BAAyBL,EAAzB,cACrB,gCACE,6BAAKC,IACL,4BAAIC,WCeGI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,mCAEIA,EAAOC,KAAI,SAACC,EAAOC,GACjB,OACE,cAAC,EAAD,CAEEV,GAAIS,EAAMT,GACVC,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OAHRQ,SCIJC,EAbG,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,mBAClB,OACE,qBAAKT,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCqCEC,G,MAlCH,WACV,MAA4BC,mBAAS,IAArC,mBAAOjB,EAAP,KAAekB,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA0BH,mBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAzB,GAAM,OAAIkB,EAAUlB,MAC1B4B,QAAQC,IAAIR,KACb,CAACA,IAEJ,IAIMS,EAAiB9B,EAAO+B,QAAO,SAAA7B,GACnC,OAAOA,EAAMR,KAAKsC,cAAcC,SAASd,EAAYa,kBAGvD,OAAQhC,EAAOkC,OAGX,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,wBAAQuC,QAAS,kBAAMb,EAASD,EAAM,IAAtC,uBACA,cAAC,EAAD,CAAWhB,mBAdM,SAAC+B,GACtBhB,EAAegB,EAAMC,OAAOC,UAcxB,cAAC,EAAD,UACE,cAAC,EAAD,CAAUtC,OAAQ8B,SAPxB,2CCxBJS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3f6b1af4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({id, name, email}) => {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`http://robohash.org/${id}?200x200`}/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  return (\r\n    <>\r\n      {\r\n        robots.map((robot, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              id={robot.id}\r\n              name={robot.name}\r\n              email={robot.email}\r\n            />\r\n          )\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({handleSearchChange}) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={handleSearchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll\r\n","import { useState, useEffect } from 'react';\nimport 'tachyons';\n\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\nimport '../styles/App.css';\n\nconst App = () => {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchfield] = useState('');\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(robots => setRobots(robots));\n      console.log(count);\n  }, [count])\n\n  const onSearchChange = (event) => {\n    setSearchfield(event.target.value);\n  }\n  \n  const filteredRobots = robots.filter(robot => {\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n\n  return !robots.length ?\n    <h1>Loading</h1> :\n    (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <button onClick={() => setCount(count+1)}>Click Me!</button>\n        <SearchBox handleSearchChange={onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}